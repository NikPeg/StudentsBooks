Отчёт по домашнему заданию №5
Пеганова Никиты Сергеевича
Группа БПИ204

Условие:
22. Задача об инвентаризации по книгам. После нового года в библиотеке
университета обнаружилась пропажа каталога. После поиска и наказания,
виноватых ректор дал указание восстановить каталог силами студентов.
Фонд библиотека представляет собой прямоугольное помещение, в котором
находится M рядов по N шкафов по K книг в каждом шкафу. Требуется
создать многопоточное приложение, составляющее каталог. При решении
задачи использовать метод «портфель задач», причем в качестве отдельной
задачи задается внесение в каталог записи об отдельной книге.

Запуск проекта:
1) java -jar StudentsBooks/out/artifacts/StudentsBooks_jar/StudentsBooks.jar ЧИСЛО_СТУДЕНТОВ ЧИСЛО_РЯДОВ ЧИСЛО_ШКАФОВ ЧИСЛО_КНИГ_В_ШКАФУ
2) Также возможен запуск из IDE с указанием аргументов ЧИСЛО_СТУДЕНТОВ ЧИСЛО_РЯДОВ ЧИСЛО_ШКАФОВ ЧИСЛО_КНИГ_В_ШКАФУ

Зависимости между классами в программе:
Main
| | |
| | v
| | Library---|
| v           v
| Student -> Book
| |           |
v v           |
Utils <--------

Расположение файлов исходного кода:
src/studentsBooks/

Описание работы программы:
Студенты (в параллельных потоках) приходят в библиотку со случайными промежутками времени (100-200мс) и приносят случайные книги.
Библиотека -- реализация метода "портфель задач": при редактировании массива книг одним студентом, все остальные не имеют к нему доступа и "ждут".
Программа завершает работу, когда все студенты узнают, что библиотека полна, принеся очередную книгу.

Примечание:
Программа может работать достаточно долго при больших размерах библиотеки, так как студенты могут долго не находить нужные книги.
Пример "быстрого" теста: 10 3 3 3

Тестирование:
Было проведено тестирование работоспособности программы.
Программа успешно сработала на "критичных" значениях, например, нулевое число рядов, шкафов и книг.
Также было проведено несколько длительных тестов при больших размерах библиотеки, например, 10 10 10 10. Дедлоков за время работы программы обнаружено не было, исключений, связанных с одновременным обращением к одной области памяти из разных потоков также не возникло.
